services:
  auth-app:
    build: containers/auth-app
    image: auth-app
    container_name: auth-app
    env_file:
      - containers/auth-app/example.env
    ports:
      - "8080:80"
    networks:
      - systemDesign
    depends_on:
      users-pg:
        condition: service_healthy

  gateway:
    build: containers/gateway
    image: gateway
    container_name: gateway
    env_file:
      - containers/gateway/example.env
    ports:
      - "8000:80"
    networks:
      - systemDesign
    depends_on:
      auth-app:
        condition: service_started
      pymongo_db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  users-pg:
    image: bitnami/postgresql:13
    container_name: users-pg
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=thepass123
      - POSTGRESQL_DATABASE=users_db
    ports:
      - "5432:5432"
    networks:
      - systemDesign
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d users_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pymongo_db:
    image: bitnami/mongodb:latest
    container_name: pymongo_db
    ports:
      - "27017:27017"
    networks:
      - systemDesign
    environment:
      - MONGODB_ROOT_PASSWORD=rootpassword

  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq
    ports:
      - "5672:5672"
    networks:
      - systemDesign
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "check_running" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  systemDesign:
    name: systemDesign
